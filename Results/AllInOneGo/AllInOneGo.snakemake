rule selectPRDM9BoundPeaks:
    output: "{dataset}.PRDM9_bound_peaks.bed"
    input:  "{dataset}.fimo.out"
    shell:  r"""
    bedtools intersect -a {wildcards.dataset}.peakCalls.bed -b {wildcards.dataset}.3.fimo.out -F 1.0 -u > {wildcards.dataset}.f3.PRDM9_bound_peaks.bed
    bedtools intersect -a {wildcards.dataset}.peakCalls.bed -b {wildcards.dataset}.4.fimo.out -F 1.0 -u > {wildcards.dataset}.f4.PRDM9_bound_peaks.bed
    bedtools intersect -a {wildcards.dataset}.peakCalls.bed -b {wildcards.dataset}.5.fimo.out -F 1.0 -u > {wildcards.dataset}.f5.PRDM9_bound_peaks.bed
    bedtools intersect -a {wildcards.dataset}.peakCalls.bed -b {wildcards.dataset}.6.fimo.out -F 1.0 -u > {wildcards.dataset}.f6.PRDM9_bound_peaks.bed
    """

rule findMotif:
    output: "{dataset}.fimo.out"
    input:  "{dataset}.peakCalls.fasta"
    shell:  r"""
    fimo --verbosity 4 --parse-genomic-coord --max-stored-scores 10000000 --oc fimo_out /home/s1949868/PRDM9.pwm.meme {input}
    fimo --verbosity 4 --parse-genomic-coord --max-stored-scores 10000000 --oc fimo_out3 --thresh 1e-3 /home/s1949868/PRDM9.pwm.meme {input}
    fimo --verbosity 4 --parse-genomic-coord --max-stored-scores 10000000 --oc fimo_out4 --thresh 1e-4 /home/s1949868/PRDM9.pwm.meme {input}
    fimo --verbosity 4 --parse-genomic-coord --max-stored-scores 10000000 --oc fimo_out5 --thresh 1e-5 /home/s1949868/PRDM9.pwm.meme {input}
    fimo --verbosity 4 --parse-genomic-coord --max-stored-scores 10000000 --oc fimo_out6 --thresh 1e-6 /home/s1949868/PRDM9.pwm.meme {input}
    
    mv fimo_out/fimo.gff {wildcards.dataset}.fimo.out
    mv fimo_out3/fimo.gff {wildcards.dataset}.3.fimo.out
    mv fimo_out4/fimo.gff {wildcards.dataset}.4.fimo.out
    mv fimo_out5/fimo.gff {wildcards.dataset}.5.fimo.out
    mv fimo_out6/fimo.gff {wildcards.dataset}.6.fimo.out
    """

rule getPeaksFasta:
    output: "{dataset}.peakCalls.fasta"
    input:  "{dataset}.peakCalls.bed"
    shell:  "bedtools getfasta -fi /home/s1949868/Tools/hg38.fa -bed {input} -fo {output}"

rule refinePeaks:
    output: "{dataset}.peakCalls.bed"
    input:  "{dataset}.bdgpeakcalls.bed.sorted"
    shell:  """for file in {input} ; do \
     cancerType=${{file:0:4}}; \
     cancerType=${{cancerType%x*}}; \
     bedtools intersect -a /exports/eddie/scratch/s1949868/TCGA-ATAC_Cancer_Type-specific_PeakCalls/sorted/${{cancerType}}_peakCalls.txt.sorted -b {input} -f 0.5 -u > {output}; \
     done"""

rule sortBdgpeakcalls:
    output: "{dataset}.bdgpeakcalls.bed.sorted"
    input:  "{dataset}.bdgpeakcalls.bed"
    shell:  """sort -k1,1 -k2,2n {input} | awk '{{FS=OFS="\t"; if($1~/^chr/){{print $1,$2,$3}}}}' > {output}"""

rule recallPeaks:
    output: "{dataset}.bdgpeakcalls.bed"
    input:  "{dataset}.pvalue.bg"
    # Call peaks on score track using a cutoff p-value=0.01
    shell:  r"""
    macs2 bdgpeakcall -i {input} -c 2 -l 150 -g 75 -o /exports/eddie/scratch/s1949868/AllInOneGo/bdgpeakcall2/{wildcards.dataset}/{output}
    macs2 bdgpeakcall -i {input} -c 3 -l 150 -g 75 -o /exports/eddie/scratch/s1949868/AllInOneGo/bdgpeakcall3/{wildcards.dataset}/{output}
    macs2 bdgpeakcall -i {input} -c 4 -l 150 -g 75 -o /exports/eddie/scratch/s1949868/AllInOneGo/bdgpeakcall4/{wildcards.dataset}/{output}
    macs2 bdgpeakcall -i {input} -c 5 -l 150 -g 75 -o /exports/eddie/scratch/s1949868/AllInOneGo/bdgpeakcall5/{wildcards.dataset}/{output}
    macs2 bdgpeakcall -i {input} -c 6 -l 150 -g 75 -o /exports/eddie/scratch/s1949868/AllInOneGo/bdgpeakcall6/{wildcards.dataset}/{output}
    """

rule calculatePoisLambdaAndPvalue:
    output: "{dataset}.pvalue.bg"
    input:  "{dataset}.bg"
    shell:  r"""
    python3 /home/s1949868/MScProject/Results/AllInOneGo/PeakRecall/calculatePoisLambda.py {input}
    # Compare ATAC-seq signal and local lambda to get the scores in pvalue
    macs2 bdgcmp -t {input} -c {wildcards.dataset}.lambda.bg -m ppois -o {output}
    """

rule bwTobg:
    output: "{dataset}.bg"
    input:  "/exports/eddie/scratch/s1949868/BigWig/{dataset}.bw"
    shell:  "/home/s1949868/Tools/bigWigToBedGraph {input} {output}"